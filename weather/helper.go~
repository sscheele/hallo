package weather

import (
	"bufio"
	"errors"
	"os"

	darksky "github.com/mlbright/darksky/v2"
)

var apiKey string

//ErrNoData will be returned when there is no hourly data for the time specified
var ErrNoData = errors.New("No hourly data for specified time")

func init() {
	f, err := os.Open("api-key.txt")
	if err != nil {
		return
	}
	reader := bufio.NewReader(f)
	apiKey, err = reader.ReadString('\n')
	if err != nil {
		return
	}
	apiKey = apiKey[:len(apiKey)-1]
	return
}

//GetNHours returns an array of DataPoints containing weather information for now and for n hours from now
func GetNHours(n int, lat string, long string) ([]darksky.DataPoint, error) {
	var retVal [2]darksky.DataPoint
	weatherData, err := darksky.Get(apiKey, lat, long, "now", darksky.AUTO)
	if err != nil {
		return retVal, err
	}
	retVal[0] = weatherData.Currently
	if len(weatherData.Hourly.Data) < n {
		return retVal, ErrNoData
	}
	retVal[1] = weatherData.Hourly.Data[n-1]
	return retVal, nil
}
